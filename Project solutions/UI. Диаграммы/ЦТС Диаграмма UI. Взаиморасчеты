@startuml "CTS Object Diagram"
/'**Легенда 

Типы данных (DataType):
    str:<long>                  Строка (string) определенной длинны в символах, размер лучше всего указывать кратным 8, т.е. 32, 64, 128, 256 и т.д., минимальная длина строки 32 символа.
    text                        Текст (text) неограниченно длинны.
    int                         Беззнаковое целое число (integer).
    float:<accuracy>            Число (numeric). Вещественное число с определенной точностью. Точность определяется количеством знаков после запятой в формате .<число знаковпосле запятой>.
    date:<mask>                 Дата (date). С помощью маски задается формат вводимого значения, dd, mm, yy, yyyy. Например: dd.mm.yyyy т.д.
    time:<mask>                 Время (time). С помощью маски задается формат вводимого значения, элементы маски hh, mm, ss. Пример: hh:mm:ss, hh:mm, mm:ss и т.д.
    datetime:<mask>             Дата и время (datetime). Дата, дата и время с определенной точностью. С помощью маски задается формат вводимого значения dd.mm.yyyy(yy)_hh:mm:ss, или dd.mm.yyyy(yy).
    bool                        Логический (boolean). Логическое значение - Истина/Лож. Используется для чек-боксов и радио-кнопок.
    enum                        Перечисление (enumeration). Значения перечисления указываются в следующей строке в <enumvalue:>, в виде комментария обозначаемом "'", через "," в формате <Id>|<Name>. Перечисление, используется для полей с выпадающим списком к количеством значенией не более 5-10.
    bin                         Бинарный (binary) тип данных. Используется для указания на то что в поле будут хранится именно бинарные данные, например, такие как бинарный данные различных файлов и т.д.
    <ObjectName>:<choice_type>  Указывается имя объекта значение записи которго используется в качестве значения реквизита. Тип выбора - single (одно значение)/plural (несколько значений).

Заполнение реквзитов (Filling):
    manual                      Заполняется вручную.
    auto:create/save            Заполняется автоматически при создании/сохранении записи.
    generated:create/save       Генерируется автоматически при созранении/созранении записи.
    <value>                     Заполняется конкретным значеним по умолчанию при создании записи, например - true.
    develop                     Заполняется в процессе разработки ПО.

Тип реквизита:
    "Text"          Поле для ввода текста
    ()              Unchecked radio
    (X)             Checked radio
    []              Unchecked box
    [X]             Checked box
    ^DropList^      Выпадающий список ^.^
    ^WindowList^    Выбор из справочника {.}
    [Button]        Кнопка

Формат описания объектов (сущьностей):
    EntityName                  Имя объекта.
    EntityStage                 Состояние объекта, Work (в работе)/Ready (готово).
    DataType:argument           Тип данных и даполнительный аргумент, напимер длина строки для строкового реквизита.
    RefrerenceObject.Requsite   Указание на то что данные для рекыизита беруться из реквизита указанного объекта, указывается при необходимости.     
    Visibility                  Следующими знаками обозначаются реквизиты:
                                "-" - Скрытый с формы.
                                "+" - Отображаемый на форме.
                                "#" - Отображаемый на форме, но не доступный для редактирования.
    Mandatory                   Знаком "*" - реквизит обязательный для заполнения.

    /'Наименование объекта'/ entity EntityName <<EntityStage>> {
        /'Наименование реквизита'/<Visibility><Mandatory>RequisiteName: DataType:argument:RefrerenceObject.Requsite
    }
'/

'**Оформление объектов
skinparam class {
/'Готово'/      BackgroundColor<<Ready>>    LightGreen
/'В работе'/    BackgroundColor<<Work>>     LightYellow
}

'**Объекты интерфейса
'ВНИМАНИЕ!!!
'В описании объектов приведены только реквизиты отображаемые на форме, служебные реквизиты добавляются при необходимости при разработке. 

/'Реквизиты карточки объекта Счет на оплату'/ interface Payment <<Work>> {
    [1]
    'Примечание
    --
    /'Номер счета'/ +*Code: str:Payment.Code
    'Принцип формирования номера...
    /'Наименование работ, услуг'/ +*Name: str:ТАРИФЫ.Name
    /'Участник торгов'/ #*OrganizationsName: str:Organisations.Name
    /'ИНН'/ #*INN: str:Organizations.INN
    
    /'Сокращенно наименование'/ +*ShortName: str:Organizations.ShortName
    /'Полное наименование на иностранном языке'/ +ForeignLanguageName: str:Organizations.ForeignLanguageName
    /'Краткое наименование на иностранном языке'/ +ForeignLanguageShortName: str:Organizations.ForeignLanguageShortName
    /'Страна'/ +*CountryName: str:Organizations.CountryName
    --
    [2]
    --
    /'Юридический адрес'/
        /'Страна'/ +*CountryName: str:Addresses.CountryName
        /'Регион'/ +*RegionNmae: str:Addresses.RegionName
        /'Район'/ +*DistrictName: str:Addresses.DistrictName
        /'???Тип населенного пункта'/ +*LocalityType: enum:Addresses.LocalityType
        /'???Населенный пункт'/ +*LocalityName: str:Addresses.LocalityNane
        /'Улица'/ +*Street: str:Addresses.Street
        /'Дом'/ +*Bilding: int:Addresses.Building
        /'Корпус'/ +*BildingPart: int:Addresses.BuildingPart
        /'Комната'/ +*Room: int:Addresses.Room
    /'Почтовый адрес'/
        /'Страна'/ +*CountryName: str:Addresses.CountryName
        /'Регион'/ +*RegionNmae: str:Addresses.RegionName
        /'Район'/ +*DistrictName: str:Addresses.DistrictName
        /'???Тип населенного пункта'/ +*LocalityType: enum:Addresses.LocalityType
        /'???Населенный пункт'/ +*LocalityName: str:Addresses.LocalityNane
        /'Улица'/ +*Street: str:Addresses.Street
        /'Дом'/ +*Bilding: int:Addresses.Building
        /'Корпус'/ +*BildingPart: int:Addresses.BuildingPart
        /'Комната'/ +*Room: int:Addresses.Room
    --
    /'ИНН'/ +INN: str:Organizations.INN
    /'КИО'/ +KIO: str:Organizations.KIO
    /'КПП'/ +KPP: str:Organizations.KPP
    /'ОКПО'/ +OKPO: str:Organizations.OKPO
    /'ОГРН'/ +OGRN: str:Organizations.OGRN
    /'Дата присвоения ОГРН'/ +OGRNDate: date:str:Organizations.OGRNIPDate
    /'Место выдачи ОГРН'/ +OGRNPlace: str:Organizations.OGRNPlace
    /'ОГРНИП'/ +OGRNIP: str:Organizations.ORGNIP
    /'Дата регистрации ИП'/ +OGRNIPDate: date:str:Organizations.OGRNIPDate
    /'Паспорт'/ Passport: str:Organizations.Passport
    /'ФИО руководителя'/ +*CEOFullName: str:Organizations.CEOPostName
    /'ФИО руководителя в родительном падеже'/ +*CEOFullNameGenetive: str:Organizations.CEOPostNameGenetive
    /'Должность руководителя'/ +*CEOPostName: str:Organizations.CEOPostName
    /'Должность руководителя в родительном падеже'/ +*CEOPostNameGenetive: str:Organizations.CEOPostNameGenetive
    /'Телефон'/ +*Phone: str:Organizations.Phone
    /'Е-мэйл'/ +*Email: str:Organizations.Email
    /'Web-адрес'/ +URL: str:Organizations.URL
    /'Вид деятельности по ОКВЭД'/ +*BusinessLineId: str:BusinessLines.Name
    --
    /'Наименование'/ +*Name: str:Banks.Name
    /'БИК'/ +*BIK: str:Banks.BIK
    /'???Адрес'/
    'Подумать, мжет имеет смысл информацию об адресе банка хранить в виде строки?
        /'Страна'/ +*CountryName: str:Addresses.CountryName
        /'Регион'/ +*RegionNmae: str:Addresses.RegionName
        /'Район'/ +*DistrictName: str:Addresses.DistrictName
        /'???Тип населенного пункта'/ +*LocalityType: enum:Addresses.LocalityType
        /'???Населенный пункт'/ +*LocalityName: str:Addresses.LocalityNane
        /'Улица'/ +*Street: str:Addresses.Street
        /'Дом'/ +*Bilding: int:Addresses.Building
        /'Корпус'/ +*BildingPart: int:Addresses.BuildingPart
        /'Комната'/ +*Room: int:Addresses.Room
    /'Корресподентский счёт'/ +*CorrespondentAccount: str:Banks.CorrespondentAccount
    /'Телефон'/ +*Phone: str:Banks.Phone
    /'Веб-адрес'/ +URL: str:Banks.URL
    /'Расчетный счёт'/ +*CheckingAccount: str:Organizations.CheckingAccount
    --
    /'???Аккредитация'/ +*Accreditation: bool
    /'???Дата аккредитации'/ +AccreditationDate: date 
    /'???Дата отмены аккредитации'/ +CancellationDate: date 
}

/'Реквизиты списка объекта Участник Торгов'/ interface ListOrganizations <<Work>> {

    /'Код'/ #*Code: str:Organizations.Code
    'Принцип формирования кода...
    /'Код ЦБ'/ +*CodeCB: str:Organizations.CodeCB
    /'Форма собственности'/ +*OwnershipTypeNmae: GUID:OwnershipTypes.Name
    /'Наименование'/ +*Name: str:Organizations.Name
    /'Страна'/ +*CountryName: str:Organizations.CountryName
    /'Вид деятельности по ОКВЭД'/ +*BusinessLineId: str:BusinessLines.Name
    
}


'**Связи

