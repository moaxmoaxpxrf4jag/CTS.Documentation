@startuml "CTS Object Diagram"
/'**Легенда 

Типы данных (DataType):
    str:<long>                  Строка (string) определенной длинны в символах, размер лучше всего указывать кратным 8, т.е. 32, 64, 128, 256 и т.д., минимальная длина строки 32 символа.
    text                        Текст (text) неограниченно длинны.
    int                         Беззнаковое целое число (integer).
    float:<accuracy>            Число (numeric). Вещественное число с определенной точностью. Точность определяется количеством знаков после запятой в формате .<число знаковпосле запятой>.
    date:<mask>                 Дата (date). С помощью маски задается формат вводимого значения, dd, mm, yy, yyyy. Например: dd.mm.yyyy т.д.
    time:<mask>                 Время (time). С помощью маски задается формат вводимого значения, элементы маски hh, mm, ss. Пример: hh:mm:ss, hh:mm, mm:ss и т.д.
    datetime:<mask>             Дата и время (datetime). Дата, дата и время с определенной точностью. С помощью маски задается формат вводимого значения dd.mm.yyyy(yy)_hh:mm:ss, или dd.mm.yyyy(yy).
    bool                        Логический (boolean). Логическое значение - Истина/Лож. Используется для чек-боксов и радио-кнопок.
    enum                        Перечисление (enumeration). Значения перечисления указываются в следующей строке в <enumvalue:>, в виде комментария обозначаемом "'", через "," в формате <Id>|<Name>. Перечисление, используется для полей с выпадающим списком к количеством значенией не более 5-10.
    bin                         Бинарный (binary) тип данных. Используется для указания на то что в поле будут хранится именно бинарные данные, например, такие как бинарный данные различных файлов и т.д.
    <ObjectName>:<choice_type>  Указывается имя объекта значение записи которго используется в качестве значения реквизита. Тип выбора - single (одно значение)/plural (несколько значений).

Заполнение реквзитов (Filling):
    manual                      Заполняется вручную.
    auto:create/save            Заполняется автоматически при создании/сохранении записи.
    generated:create/save       Генерируется автоматически при созранении/созранении записи.
    <value>                     Заполняется конкретным значеним по умолчанию при создании записи, например - true.
    develop                     Заполняется в процессе разработки ПО.

Тип реквизита:
    "Text"          Поле для ввода текста
    ()              Unchecked radio
    (X)             Checked radio
    []              Unchecked box
    [X]             Checked box
    ^DropList^      Выпадающий список ^.^
    ^WindowList^    Выбор из справочника {.}
    [Button]        Кнопка

Формат описания объектов (сущьностей):
    EntityName                  Имя объекта.
    EntityStage                 Состояние объекта, Work (в работе)/Ready (готово).
    DataType:argument           Тип данных и даполнительный аргумент, напимер длина строки для строкового реквизита.
    RefrerenceObject.Requsite   Указание на то что данные для рекыизита беруться из реквизита указанного объекта, указывается при необходимости.     
    Visibility                  Следующими знаками обозначаются реквизиты:
                                "-" - Скрытый с формы.
                                "+" - Отображаемый на форме.
                                "#" - Отображаемый на форме, но не доступный для редактирования.
    Mandatory                   Знаком "*" - реквизит обязательный для заполнения.

    /'Наименование объекта'/ entity EntityName <<EntityStage>> {
        /'Наименование реквизита'/<Visibility><Mandatory>RequisiteName: DataType:argument:RefrerenceObject.Requsite
    }
'/

'**Оформление объектов
skinparam class {
/'Готово'/      BackgroundColor<<Ready>>    LightGreen
/'В работе'/    BackgroundColor<<Work>>     LightYellow
}

'**Объекты интерфейса
'ВНИМАНИЕ!!!
'В описании объектов приведены только реквизиты отображаемые на форме, служебные реквизиты добавляются при необходимости при разработке. 

/'Реквизиты карточки объекта Товар'/ interface Commodities <<Work>> {
    /'Мнемоника'/ #*Mnemonic: str:Mnemonica.Number
    'Принцип формирования нмнемоники...
    /'Дата создания'/ #*Date: date:str:Commodities.Date
    /'Наименование товара'/ +*{ComoditiesNamesID}: str:Commodities.CommoditiesNames
    /'Краткое наименование'/ #*ComoditiesNamesID: str:Commodities.CommoditiesShortName
    /'Классификатор товаров'/ +*{CommoditiesClassifier}: str:Commodities.CommoditiesClassifier
    /'Вид товара'/ +*{KindID}: str:Commodities.CommoditiesKind
    /'Лот (единица измерения товара)'/ +*{BaseUnitID}: str:Commodities.CommoditiesBaseUnit
    /'Размер лота'/ +*QuantityID: float:Commodities.CommoditiesQuantity
    /'Регион поставки'/ +*{RegionID}: float:Commodities.CommoditiesRegionName
    /'Базис поставки (склады, станции)'/ *{BasisID}: str:Commodities.CommoditiesBases
    /'Завод-производитель'/ +*{PlantID}: str: Commodities.CommoditiesPlants
    /'Упаковка'/ +*{Package}: str: Commodities.CommoditiesPaskage
    /'Описание товара'/ +Description: str: Commodities.CommoditiesDescription
    /'Продавец'/ #*OrganisationsCustomer: str: Commodities.CommoditiesOrganisationsCustomer
    /'Спецификация'/ #*Specifications:  str: Commodities.CommoditiesSpecifications

    Документ Button
--
    /'Статус'/ #*Status: str:CommoditiesStatus.Name
    /'Автор'/ #*CreatedByUser: str:Users.
}

'**Связи

@enduml